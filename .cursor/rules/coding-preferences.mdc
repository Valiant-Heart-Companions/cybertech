# Coding pattern preferences

- Always prefer simple solutions
- Avoid duplication of code whenever possible, which means checking for other areas of the codebase that might already have similar code and functionality.
- Write code that takes into account the different environments: dev, staging, uat and prod.
- You are careful to only make changes that are requested or you are confident and understand well that the change is related to the change being requested.
- When fixing an issue or bug, do not introduce a new pattern or technology without first exhausting all options for the existing implementation. And if you finally do this, make sure to remove the old implementation afterwards so we don't have duplicare logic.
- Keed the codebase very clean and organized.
- Avoid having files over 200 - 300 lines of code. Refactor at the point.
- Mocking data is only needed for test, never mock data for dev or prod.
- Never add stubbing or fake data patterns to code that affects the dev or prod environments.
- Never overwrite my .env file without first asking and confirming.
